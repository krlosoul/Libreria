// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20210218052240_MyMigration")]
    partial class MyMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Entities.Collections.Autores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Entities.Collections.AutoresLibros", b =>
                {
                    b.Property<int>("AutoresId")
                        .HasColumnType("int")
                        .HasColumnName("AutoresId");

                    b.Property<long>("LibrosIsbn")
                        .HasColumnType("bigint")
                        .HasColumnName("LibrosIsbn");

                    b.HasKey("AutoresId", "LibrosIsbn");

                    b.HasIndex("LibrosIsbn");

                    b.ToTable("AutoresLibros");
                });

            modelBuilder.Entity("Entities.Collections.Editoriales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("DireccionCorrespondencia")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("MaxLibros")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("Entities.Collections.Libros", b =>
                {
                    b.Property<long>("Isbn")
                        .HasColumnType("bigint")
                        .HasColumnName("Isbn");

                    b.Property<int>("EditorialesId")
                        .HasColumnType("int")
                        .HasColumnName("EditorialesId");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("NumeroPaginas")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Isbn");

                    b.HasIndex("EditorialesId");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Entities.Collections.AutoresLibros", b =>
                {
                    b.HasOne("Entities.Collections.Autores", "autor")
                        .WithMany("autoresHasLibros")
                        .HasForeignKey("AutoresId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Collections.Libros", "libro")
                        .WithMany("autoresHasLibros")
                        .HasForeignKey("LibrosIsbn")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("autor");

                    b.Navigation("libro");
                });

            modelBuilder.Entity("Entities.Collections.Libros", b =>
                {
                    b.HasOne("Entities.Collections.Editoriales", "editorial")
                        .WithMany("libros")
                        .HasForeignKey("EditorialesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("editorial");
                });

            modelBuilder.Entity("Entities.Collections.Autores", b =>
                {
                    b.Navigation("autoresHasLibros");
                });

            modelBuilder.Entity("Entities.Collections.Editoriales", b =>
                {
                    b.Navigation("libros");
                });

            modelBuilder.Entity("Entities.Collections.Libros", b =>
                {
                    b.Navigation("autoresHasLibros");
                });
#pragma warning restore 612, 618
        }
    }
}
